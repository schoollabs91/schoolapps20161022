package com.lab.kot.school.model.eo;

import java.sql.Date;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Oct 02 20:45:03 IST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SSessionEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        SessionId,
        SessionName,
        SessionStartDate,
        SessionCode,
        SessionEndDate,
        ActiveYn;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int SESSIONID = AttributesEnum.SessionId.index();
    public static final int SESSIONNAME = AttributesEnum.SessionName.index();
    public static final int SESSIONSTARTDATE = AttributesEnum.SessionStartDate.index();
    public static final int SESSIONCODE = AttributesEnum.SessionCode.index();
    public static final int SESSIONENDDATE = AttributesEnum.SessionEndDate.index();
    public static final int ACTIVEYN = AttributesEnum.ActiveYn.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SSessionEOImpl() {
    }

    /**
     * Gets the attribute value for SessionId, using the alias name SessionId.
     * @return the value of SessionId
     */
    public Long getSessionId() {
        return (Long) getAttributeInternal(SESSIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SessionId.
     * @param value value to set the SessionId
     */
    public void setSessionId(Long value) {
        setAttributeInternal(SESSIONID, value);
    }

    /**
     * Gets the attribute value for SessionName, using the alias name SessionName.
     * @return the value of SessionName
     */
    public String getSessionName() {
        return (String) getAttributeInternal(SESSIONNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for SessionName.
     * @param value value to set the SessionName
     */
    public void setSessionName(String value) {
        setAttributeInternal(SESSIONNAME, value);
    }

    /**
     * Gets the attribute value for SessionStartDate, using the alias name SessionStartDate.
     * @return the value of SessionStartDate
     */
    public Date getSessionStartDate() {
        return (Date) getAttributeInternal(SESSIONSTARTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SessionStartDate.
     * @param value value to set the SessionStartDate
     */
    public void setSessionStartDate(Date value) {
        setAttributeInternal(SESSIONSTARTDATE, value);
    }

    /**
     * Gets the attribute value for SessionCode, using the alias name SessionCode.
     * @return the value of SessionCode
     */
    public String getSessionCode() {
        return (String) getAttributeInternal(SESSIONCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SessionCode.
     * @param value value to set the SessionCode
     */
    public void setSessionCode(String value) {
        setAttributeInternal(SESSIONCODE, value);
    }

    /**
     * Gets the attribute value for SessionEndDate, using the alias name SessionEndDate.
     * @return the value of SessionEndDate
     */
    public Date getSessionEndDate() {
        return (Date) getAttributeInternal(SESSIONENDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SessionEndDate.
     * @param value value to set the SessionEndDate
     */
    public void setSessionEndDate(Date value) {
        setAttributeInternal(SESSIONENDDATE, value);
    }

    /**
     * Gets the attribute value for ActiveYn, using the alias name ActiveYn.
     * @return the value of ActiveYn
     */
    public String getActiveYn() {
        return (String) getAttributeInternal(ACTIVEYN);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActiveYn.
     * @param value value to set the ActiveYn
     */
    public void setActiveYn(String value) {
        setAttributeInternal(ACTIVEYN, value);
    }

    /**
     * @param sessionId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Long sessionId) {
        return new Key(new Object[] { sessionId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.lab.kot.school.model.eo.SSessionEO");
    }


    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        SequenceImpl tranSeq = new SequenceImpl("LIST_ID", this.getDBTransaction());        
        Number tNumber = tranSeq.getSequenceNumber();
        this.setSessionId(tNumber.longValue());
    }
}

