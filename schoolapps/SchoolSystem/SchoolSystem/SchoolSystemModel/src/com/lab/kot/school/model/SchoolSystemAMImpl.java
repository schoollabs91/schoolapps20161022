package com.lab.kot.school.model;

import com.lab.kot.school.model.common.SchoolSystemAM;
import com.lab.kot.school.model.vo.BookBasketVOImpl;
import com.lab.kot.school.model.vo.SBookAllocationVOImpl;
import com.lab.kot.school.model.vo.SStudentVOImpl;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;
import oracle.jbo.VariableValueManager;
import oracle.jbo.ViewCriteria;
import oracle.jbo.ViewCriteriaManager;
import oracle.jbo.ViewCriteriaRow;
import oracle.jbo.ViewObject;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Oct 12 19:02:41 IST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SchoolSystemAMImpl extends ApplicationModuleImpl implements SchoolSystemAM {
    /**
     * This is the default constructor (do not remove).
     */
    public SchoolSystemAMImpl() {
    }

    /**
     * Container's getter for SSectionVO1.
     * @return SSectionVO1
     */
    public ViewObjectImpl getSSectionVO1() {
        return (ViewObjectImpl) findViewObject("SSectionVO1");
    }

    /**
     * Container's getter for SSessionVO1.
     * @return SSessionVO1
     */
    public ViewObjectImpl getSSessionVO1() {
        return (ViewObjectImpl) findViewObject("SSessionVO1");
    }

    /**
     * Container's getter for SSubjectsVO1.
     * @return SSubjectsVO1
     */
    public ViewObjectImpl getSSubjectsVO1() {
        return (ViewObjectImpl) findViewObject("SSubjectsVO1");
    }

    /**
     * Container's getter for SStudentVO1.
     * @return SStudentVO1
     */
    public SStudentVOImpl getSStudentVO1() {
        return (SStudentVOImpl) findViewObject("SStudentVO1");
    }

    /**
     * Container's getter for SClassVO1.
     * @return SClassVO1
     */
    public ViewObjectImpl getSClassVO1() {
        return (ViewObjectImpl) findViewObject("SClassVO1");
    }

    /**
     * Container's getter for SRunningSessionVO1.
     * @return SRunningSessionVO1
     */
    public ViewObjectImpl getSRunningSessionVO1() {
        return (ViewObjectImpl) findViewObject("SRunningSessionVO1");
    }

    /**
     * Container's getter for STeacherVO1.
     * @return STeacherVO1
     */
    public ViewObjectImpl getSTeacherVO1() {
        return (ViewObjectImpl) findViewObject("STeacherVO1");
    }

    /**
     * Container's getter for SStudentAttendanceVO1.
     * @return SStudentAttendanceVO1
     */
    public ViewObjectImpl getSStudentAttendanceVO1() {
        return (ViewObjectImpl) findViewObject("SStudentAttendanceVO1");
    }

    /**
     * Container's getter for ListValuesVO1.
     * @return ListValuesVO1
     */
    public ViewObjectImpl getListValuesVO1() {
        return (ViewObjectImpl) findViewObject("ListValuesVO1");
    }

    /**
     * Container's getter for SCommonLookupVO1.
     * @return SCommonLookupVO1
     */
    public ViewObjectImpl getSCommonLookupVO1() {
        return (ViewObjectImpl) findViewObject("SCommonLookupVO1");
    }

    /**
     * Container's getter for SStudAttendVO1.
     * @return SStudAttendVO1
     */
    public ViewObjectImpl getSStudAttendVO1() {
        return (ViewObjectImpl) findViewObject("SStudAttendVO1");
    }

    /**
     * Container's getter for SStudentVO2.
     * @return SStudentVO2
     */
    public SStudentVOImpl getSStudentVO2() {
        return (SStudentVOImpl) findViewObject("SStudentVO2");
    }

    /**
     * Container's getter for SStudentSRunningSessionVL1.
     * @return SStudentSRunningSessionVL1
     */
    public ViewLinkImpl getSStudentSRunningSessionVL1() {
        return (ViewLinkImpl) findViewLink("SStudentSRunningSessionVL1");
    }
    public void copyTeacherToAttendance() {
        
        try
        {
            System.out.println("init");
        ViewObjectImpl lVo = this.getListValuesVO2(); 
        Row currRow = lVo.getCurrentRow();
        String sessionCode = (String)currRow.getAttribute("SessionCode");       
        String month = (String)currRow.getAttribute("SMonth");

        ViewObjectImpl vo = this.getSTeacherVO1();        
        vo.executeQuery();
        
        RowSetIterator rsi = vo.createRowSetIterator(null);
        ViewObjectImpl attVo = getSTeachAttendVO1();
        while (rsi.hasNext()) {
            Row tRow = (Row) rsi.next();
            Row nRow = attVo.createRow();            
            nRow.setAttribute("TId", tRow.getAttribute("TId"));           
            nRow.setAttribute("SessionCode", sessionCode);
            nRow.setAttribute("Month", month);
            attVo.insertRow(nRow);
            System.out.println("tRow.getAttribute(\"TId\")"+tRow.getAttribute("TId"));
            System.out.println("tRow.getAttribute(\"sessionCode\")"+sessionCode);
            System.out.println("tRow.getAttribute(\"month\")"+month);
            
        }  
        rsi.closeRowSetIterator();
        this.getTransaction().commit();
            System.out.println("exit");
        }
        catch(Exception ex) {
            this.getTransaction().rollback();
            throw new JboException(ex);
        } 
    }
    public void copyStudentToAttendance() {
        try
        {
            System.out.println("init");
        ViewObjectImpl lVo = this.getListValuesVO1(); 
        Row currRow = lVo.getCurrentRow();
        String sessionCode = (String)currRow.getAttribute("SessionCode");
        String classCode = (String)currRow.getAttribute("ClassClode");
        String sectionCode = (String)currRow.getAttribute("SectionCode");
        String month = (String)currRow.getAttribute("SMonth");

        ViewObjectImpl vo = this.getSStudentVO2();
        ViewCriteria vc = vo.createViewCriteria();
        ViewCriteriaRow vcRow = vc.createViewCriteriaRow();
        vcRow.setAttribute("SessionCode", sessionCode);
        vc.addRow(vcRow);
        vcRow.setAttribute("ClassCode", classCode);
        vc.addRow(vcRow);
        vcRow.setAttribute("SectionCode", sectionCode);
        vc.addRow(vcRow);
        vo.applyViewCriteria(vc);
        vo.executeQuery();
        
        RowSetIterator rsi = vo.createRowSetIterator(null);
        ViewObjectImpl attVo = getSStudAttendVO1();
        while (rsi.hasNext()) {
            Row tRow = (Row) rsi.next();
            Row nRow = attVo.createRow();            
            nRow.setAttribute("SId", tRow.getAttribute("SId"));
            nRow.setAttribute("ClassCode", tRow.getAttribute("ClassCode"));
            nRow.setAttribute("SectionCode", tRow.getAttribute("SectionCode"));
            nRow.setAttribute("SessionCode", tRow.getAttribute("SessionCode"));
            nRow.setAttribute("Month", month);
            attVo.insertRow(nRow);
            System.out.println("tRow.getAttribute(\"SId\")"+tRow.getAttribute("SId"));
            System.out.println("tRow.getAttribute(\"ClassCode\")"+tRow.getAttribute("ClassCode"));
            System.out.println("tRow.getAttribute(\"SectionCode\")"+tRow.getAttribute("SectionCode"));
            System.out.println("tRow.getAttribute(\"SessionCode\")"+tRow.getAttribute("SessionCode"));
            System.out.println("tRow.getAttribute(\"month\")"+month);

        }  
        rsi.closeRowSetIterator();
        this.getTransaction().commit();
            System.out.println("exit");
        }
        catch(Exception ex) {
            this.getTransaction().rollback();
            throw new JboException(ex);
        } 
        
    }

    /**
     * Container's getter for STeachAttendVO1.
     * @return STeachAttendVO1
     */
    public ViewObjectImpl getSTeachAttendVO1() {
        return (ViewObjectImpl) findViewObject("STeachAttendVO1");
    }

    /**
     * Container's getter for ListValuesVO2.
     * @return ListValuesVO2
     */
    public ViewObjectImpl getListValuesVO2() {
        return (ViewObjectImpl) findViewObject("ListValuesVO2");
    }

    /**
     * Container's getter for SBookVO1.
     * @return SBookVO1
     */
    public ViewObjectImpl getSBookVO1() {
        return (ViewObjectImpl) findViewObject("SBookVO1");
    }

    /**
     * Container's getter for SBookAllocationVO1.
     * @return SBookAllocationVO1
     */
    public SBookAllocationVOImpl getSBookAllocationVO1() {
        return (SBookAllocationVOImpl) findViewObject("SBookAllocationVO1");
    }

    /**
     * Container's getter for BookBasketVO1.
     * @return BookBasketVO1
     */
    public BookBasketVOImpl getBookBasketVO1() {
        return (BookBasketVOImpl) findViewObject("BookBasketVO1");
    }

    /**
     * Container's getter for SBookReturnVO1.
     * @return SBookReturnVO1
     */
    public ViewObjectImpl getSBookReturnVO1() {
        return (ViewObjectImpl) findViewObject("SBookReturnVO1");
    }

    /**
     * Container's getter for STimeTableVO1.
     * @return STimeTableVO1
     */
    public ViewObjectImpl getSTimeTableVO1() {
        return (ViewObjectImpl) findViewObject("STimeTableVO1");
    }

    /**
     * Container's getter for SExamTimeTableEO1.
     * @return SExamTimeTableEO1
     */
    public ViewObjectImpl getSExamTimeTableEO1() {
        return (ViewObjectImpl) findViewObject("SExamTimeTableEO1");
    }

    /**
     * Container's getter for SExamTimeTableVO1.
     * @return SExamTimeTableVO1
     */
    public ViewObjectImpl getSExamTimeTableVO1() {
        return (ViewObjectImpl) findViewObject("SExamTimeTableVO1");
    }
}

