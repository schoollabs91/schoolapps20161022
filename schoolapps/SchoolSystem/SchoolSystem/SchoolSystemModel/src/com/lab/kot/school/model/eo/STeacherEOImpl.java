package com.lab.kot.school.model.eo;

import java.sql.Blob;
import java.sql.Date;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Oct 02 21:12:49 IST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class STeacherEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        TId,
        TFName,
        TLName,
        TMName,
        TGender,
        TNationality,
        TDob,
        TEQual,
        TPhoto,
        TExp,
        TAddressLine1,
        TAddressLine2,
        TAddressLine3,
        TCity,
        TState,
        TPin,
        TCountry,
        TPhoneNo,
        TMaritalStatus;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int TID = AttributesEnum.TId.index();
    public static final int TFNAME = AttributesEnum.TFName.index();
    public static final int TLNAME = AttributesEnum.TLName.index();
    public static final int TMNAME = AttributesEnum.TMName.index();
    public static final int TGENDER = AttributesEnum.TGender.index();
    public static final int TNATIONALITY = AttributesEnum.TNationality.index();
    public static final int TDOB = AttributesEnum.TDob.index();
    public static final int TEQUAL = AttributesEnum.TEQual.index();
    public static final int TPHOTO = AttributesEnum.TPhoto.index();
    public static final int TEXP = AttributesEnum.TExp.index();
    public static final int TADDRESSLINE1 = AttributesEnum.TAddressLine1.index();
    public static final int TADDRESSLINE2 = AttributesEnum.TAddressLine2.index();
    public static final int TADDRESSLINE3 = AttributesEnum.TAddressLine3.index();
    public static final int TCITY = AttributesEnum.TCity.index();
    public static final int TSTATE = AttributesEnum.TState.index();
    public static final int TPIN = AttributesEnum.TPin.index();
    public static final int TCOUNTRY = AttributesEnum.TCountry.index();
    public static final int TPHONENO = AttributesEnum.TPhoneNo.index();
    public static final int TMARITALSTATUS = AttributesEnum.TMaritalStatus.index();

    /**
     * This is the default constructor (do not remove).
     */
    public STeacherEOImpl() {
    }

    /**
     * Gets the attribute value for TId, using the alias name TId.
     * @return the value of TId
     */
    public String getTId() {
        return (String) getAttributeInternal(TID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TId.
     * @param value value to set the TId
     */
    public void setTId(String value) {
        setAttributeInternal(TID, value);
    }

    /**
     * Gets the attribute value for TFName, using the alias name TFName.
     * @return the value of TFName
     */
    public String getTFName() {
        return (String) getAttributeInternal(TFNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for TFName.
     * @param value value to set the TFName
     */
    public void setTFName(String value) {
        setAttributeInternal(TFNAME, value);
    }

    /**
     * Gets the attribute value for TLName, using the alias name TLName.
     * @return the value of TLName
     */
    public String getTLName() {
        return (String) getAttributeInternal(TLNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for TLName.
     * @param value value to set the TLName
     */
    public void setTLName(String value) {
        setAttributeInternal(TLNAME, value);
    }

    /**
     * Gets the attribute value for TMName, using the alias name TMName.
     * @return the value of TMName
     */
    public String getTMName() {
        return (String) getAttributeInternal(TMNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for TMName.
     * @param value value to set the TMName
     */
    public void setTMName(String value) {
        setAttributeInternal(TMNAME, value);
    }

    /**
     * Gets the attribute value for TGender, using the alias name TGender.
     * @return the value of TGender
     */
    public String getTGender() {
        return (String) getAttributeInternal(TGENDER);
    }

    /**
     * Sets <code>value</code> as the attribute value for TGender.
     * @param value value to set the TGender
     */
    public void setTGender(String value) {
        setAttributeInternal(TGENDER, value);
    }

    /**
     * Gets the attribute value for TNationality, using the alias name TNationality.
     * @return the value of TNationality
     */
    public String getTNationality() {
        return (String) getAttributeInternal(TNATIONALITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for TNationality.
     * @param value value to set the TNationality
     */
    public void setTNationality(String value) {
        setAttributeInternal(TNATIONALITY, value);
    }

    /**
     * Gets the attribute value for TDob, using the alias name TDob.
     * @return the value of TDob
     */
    public Date getTDob() {
        return (Date) getAttributeInternal(TDOB);
    }

    /**
     * Sets <code>value</code> as the attribute value for TDob.
     * @param value value to set the TDob
     */
    public void setTDob(Date value) {
        setAttributeInternal(TDOB, value);
    }

    /**
     * Gets the attribute value for TEQual, using the alias name TEQual.
     * @return the value of TEQual
     */
    public String getTEQual() {
        return (String) getAttributeInternal(TEQUAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for TEQual.
     * @param value value to set the TEQual
     */
    public void setTEQual(String value) {
        setAttributeInternal(TEQUAL, value);
    }

    /**
     * Gets the attribute value for TPhoto, using the alias name TPhoto.
     * @return the value of TPhoto
     */
    public Blob getTPhoto() {
        return (Blob) getAttributeInternal(TPHOTO);
    }

    /**
     * Sets <code>value</code> as the attribute value for TPhoto.
     * @param value value to set the TPhoto
     */
    public void setTPhoto(Blob value) {
        setAttributeInternal(TPHOTO, value);
    }

    /**
     * Gets the attribute value for TExp, using the alias name TExp.
     * @return the value of TExp
     */
    public String getTExp() {
        return (String) getAttributeInternal(TEXP);
    }

    /**
     * Sets <code>value</code> as the attribute value for TExp.
     * @param value value to set the TExp
     */
    public void setTExp(String value) {
        setAttributeInternal(TEXP, value);
    }

    /**
     * Gets the attribute value for TAddressLine1, using the alias name TAddressLine1.
     * @return the value of TAddressLine1
     */
    public String getTAddressLine1() {
        return (String) getAttributeInternal(TADDRESSLINE1);
    }

    /**
     * Sets <code>value</code> as the attribute value for TAddressLine1.
     * @param value value to set the TAddressLine1
     */
    public void setTAddressLine1(String value) {
        setAttributeInternal(TADDRESSLINE1, value);
    }

    /**
     * Gets the attribute value for TAddressLine2, using the alias name TAddressLine2.
     * @return the value of TAddressLine2
     */
    public String getTAddressLine2() {
        return (String) getAttributeInternal(TADDRESSLINE2);
    }

    /**
     * Sets <code>value</code> as the attribute value for TAddressLine2.
     * @param value value to set the TAddressLine2
     */
    public void setTAddressLine2(String value) {
        setAttributeInternal(TADDRESSLINE2, value);
    }

    /**
     * Gets the attribute value for TAddressLine3, using the alias name TAddressLine3.
     * @return the value of TAddressLine3
     */
    public String getTAddressLine3() {
        return (String) getAttributeInternal(TADDRESSLINE3);
    }

    /**
     * Sets <code>value</code> as the attribute value for TAddressLine3.
     * @param value value to set the TAddressLine3
     */
    public void setTAddressLine3(String value) {
        setAttributeInternal(TADDRESSLINE3, value);
    }

    /**
     * Gets the attribute value for TCity, using the alias name TCity.
     * @return the value of TCity
     */
    public String getTCity() {
        return (String) getAttributeInternal(TCITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for TCity.
     * @param value value to set the TCity
     */
    public void setTCity(String value) {
        setAttributeInternal(TCITY, value);
    }

    /**
     * Gets the attribute value for TState, using the alias name TState.
     * @return the value of TState
     */
    public String getTState() {
        return (String) getAttributeInternal(TSTATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TState.
     * @param value value to set the TState
     */
    public void setTState(String value) {
        setAttributeInternal(TSTATE, value);
    }

    /**
     * Gets the attribute value for TPin, using the alias name TPin.
     * @return the value of TPin
     */
    public String getTPin() {
        return (String) getAttributeInternal(TPIN);
    }

    /**
     * Sets <code>value</code> as the attribute value for TPin.
     * @param value value to set the TPin
     */
    public void setTPin(String value) {
        setAttributeInternal(TPIN, value);
    }

    /**
     * Gets the attribute value for TCountry, using the alias name TCountry.
     * @return the value of TCountry
     */
    public String getTCountry() {
        return (String) getAttributeInternal(TCOUNTRY);
    }

    /**
     * Sets <code>value</code> as the attribute value for TCountry.
     * @param value value to set the TCountry
     */
    public void setTCountry(String value) {
        setAttributeInternal(TCOUNTRY, value);
    }

    /**
     * Gets the attribute value for TPhoneNo, using the alias name TPhoneNo.
     * @return the value of TPhoneNo
     */
    public String getTPhoneNo() {
        return (String) getAttributeInternal(TPHONENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for TPhoneNo.
     * @param value value to set the TPhoneNo
     */
    public void setTPhoneNo(String value) {
        setAttributeInternal(TPHONENO, value);
    }

    /**
     * Gets the attribute value for TMaritalStatus, using the alias name TMaritalStatus.
     * @return the value of TMaritalStatus
     */
    public String getTMaritalStatus() {
        return (String) getAttributeInternal(TMARITALSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for TMaritalStatus.
     * @param value value to set the TMaritalStatus
     */
    public void setTMaritalStatus(String value) {
        setAttributeInternal(TMARITALSTATUS, value);
    }

    /**
     * @param tId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String tId) {
        return new Key(new Object[] { tId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.lab.kot.school.model.eo.STeacherEO");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        SequenceImpl tranSeq = new SequenceImpl("TEACHER_ID", this.getDBTransaction());        
        Number tNumber = tranSeq.getSequenceNumber();
        this.setTId(tNumber.stringValue());
    }
}

