package com.lab.kot.school.model.eo;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Oct 02 20:48:26 IST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SSubjectsEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        SubjectId,
        SubjectName,
        SubjectDesc,
        ActiveYn,
        SubjectCode;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SUBJECTID = AttributesEnum.SubjectId.index();
    public static final int SUBJECTNAME = AttributesEnum.SubjectName.index();
    public static final int SUBJECTDESC = AttributesEnum.SubjectDesc.index();
    public static final int ACTIVEYN = AttributesEnum.ActiveYn.index();
    public static final int SUBJECTCODE = AttributesEnum.SubjectCode.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SSubjectsEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.lab.kot.school.model.eo.SSubjectsEO");
    }


    /**
     * Gets the attribute value for SubjectId, using the alias name SubjectId.
     * @return the value of SubjectId
     */
    public Long getSubjectId() {
        return (Long) getAttributeInternal(SUBJECTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SubjectId.
     * @param value value to set the SubjectId
     */
    public void setSubjectId(Long value) {
        setAttributeInternal(SUBJECTID, value);
    }

    /**
     * Gets the attribute value for SubjectName, using the alias name SubjectName.
     * @return the value of SubjectName
     */
    public String getSubjectName() {
        return (String) getAttributeInternal(SUBJECTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for SubjectName.
     * @param value value to set the SubjectName
     */
    public void setSubjectName(String value) {
        setAttributeInternal(SUBJECTNAME, value);
    }

   
    /**
     * Gets the attribute value for SubjectDesc, using the alias name SubjectDesc.
     * @return the value of SubjectDesc
     */
    public String getSubjectDesc() {
        return (String) getAttributeInternal(SUBJECTDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for SubjectDesc.
     * @param value value to set the SubjectDesc
     */
    public void setSubjectDesc(String value) {
        setAttributeInternal(SUBJECTDESC, value);
    }

    /**
     * Gets the attribute value for ActiveYn, using the alias name ActiveYn.
     * @return the value of ActiveYn
     */
    public String getActiveYn() {
        return (String) getAttributeInternal(ACTIVEYN);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActiveYn.
     * @param value value to set the ActiveYn
     */
    public void setActiveYn(String value) {
        setAttributeInternal(ACTIVEYN, value);
    }


    /**
     * Gets the attribute value for SubjectCode, using the alias name SubjectCode.
     * @return the value of SubjectCode
     */
    public String getSubjectCode() {
        return (String) getAttributeInternal(SUBJECTCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SubjectCode.
     * @param value value to set the SubjectCode
     */
    public void setSubjectCode(String value) {
        setAttributeInternal(SUBJECTCODE, value);
    }

    /**
     * @param subjectId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Long subjectId) {
        return new Key(new Object[] { subjectId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        SequenceImpl tranSeq = new SequenceImpl("LIST_ID", this.getDBTransaction());        
        Number tNumber = tranSeq.getSequenceNumber();
        this.setSubjectId(tNumber.longValue());
    }
}

